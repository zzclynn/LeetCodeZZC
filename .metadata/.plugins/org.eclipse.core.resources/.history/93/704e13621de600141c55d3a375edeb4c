import java.nio.ByteBuffer;
import java.nio.ByteOrder;


public class ReverseBits {
    // you need treat n as an unsigned value
    public static int reverseBits(int n) {
    	byte[] theBits=toArray(n);
    	byte temp;
    	for(int i=0;i<16;i++)
    	{
    		temp=theBits[31-i];
    		theBits[31-i]=theBits[i];
    		theBits[i]=temp;
    	}
    	
        return fromArray(theBits);
    }
    
    public static int fromArray(byte[] payload){
        ByteBuffer buffer = ByteBuffer.wrap(payload);
        buffer.order(ByteOrder.BIG_ENDIAN);
        return buffer.getInt();
    }
    
    public static byte[] toArray(int value){
        ByteBuffer buffer = ByteBuffer.allocate(32);
        buffer.order(ByteOrder.BIG_ENDIAN);
        buffer.putInt(value);
        buffer.flip();
        return buffer.array();
    }
    
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int result=reverseBits(43261596 );
		System.out.println(result);
	}

}
